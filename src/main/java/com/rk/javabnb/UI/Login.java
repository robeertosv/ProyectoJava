/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.rk.javabnb.UI;

import com.rk.javabnb.Usuarios.Admin;
import com.rk.javabnb.Usuarios.Anfitrion;
import com.rk.javabnb.Usuarios.Cliente;
import com.rk.javabnb.Usuarios.ClienteParticular;
import com.rk.javabnb.db.Database;

import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author Roberto
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        this.setVisible(true);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        formPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        register = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        reestablecerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login");
        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/small_logo.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(-40, 0, -10, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Montserrat", 2, 24)); // NOI18N
        jLabel2.setText("Login");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel2, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        formPanel.setBackground(new java.awt.Color(255, 255, 255));
        formPanel.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Email:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        formPanel.add(jLabel3, gridBagConstraints);

        email.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        formPanel.add(email, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Contraseña:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 9);
        formPanel.add(jLabel4, gridBagConstraints);

        password.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        formPanel.add(password, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("¿No tienes cuenta?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        formPanel.add(jLabel5, gridBagConstraints);

        register.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        register.setForeground(new java.awt.Color(255, 204, 51));
        register.setText("¡Crea una!");
        register.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 0);
        formPanel.add(register, gridBagConstraints);

        loginBtn.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        formPanel.add(loginBtn, gridBagConstraints);

        reestablecerLabel.setText("Contraseña olvidada? Reestablécela");
        reestablecerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reestablecerLabelMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        formPanel.add(reestablecerLabel, gridBagConstraints);

        getContentPane().add(formPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reestablecerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reestablecerLabelMouseClicked
        new ReestablecerContrasena();
        this.dispose();
        this.setVisible(false);
    }//GEN-LAST:event_reestablecerLabelMouseClicked

    private void registerMouseClicked(java.awt.event.MouseEvent evt) {
        // Lógica de abrir la pantalla de registro
        this.dispose();
        this.setVisible(false);
        new Registro();
    }

    //Lógica del login
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {
        /*ArrayList<Cliente> clientes = Database.getPersonas();
        Cliente inLogin = null;
        boolean encontrado = false;
        boolean admin = false;
        for(Cliente c : clientes ) {
            if(c.getEmail().equals(this.email.getText())) {
                inLogin = c;
                encontrado = true;
                break;
            }
        }

        if(this.email.getText().equals(Admin.getEmail())&&Admin.checkPassword(password.getPassword())){
            new MenuAdmin();
            encontrado = true;
            admin = true;
            this.dispose();
        }

        if(encontrado&&!admin) {
            if(inLogin.checkPassword(password.getPassword())) {
                ArrayList loggedUser = new ArrayList();
                loggedUser.add(inLogin);
                Database.setCurrentUser(loggedUser);
                Database.save();
                Object user = Database.getCurrentUser().get(0);
                if(user instanceof ClienteParticular){
                    new MenuParticular();
                }else if(user instanceof Anfitrion){
                    new MenuAnfitrion();
                }
                this.dispose();
            }else {
                JOptionPane.showMessageDialog(this, "Contraseña incorrecta", "Error de registro", JOptionPane.WARNING_MESSAGE);
                password.setText("");
            }
        }else if(admin){
            admin = true;
        }
        else {
            JOptionPane.showMessageDialog(this, "Usuario no encontrado", "Error de registro", JOptionPane.WARNING_MESSAGE);
        }*/
        /*boolean logged = false;
        if(Database.getAllEmail().contains(this.email.getText())) { //mira si el email existe en la base de datos
            ArrayList loggedUser = new ArrayList<>();
            for(Cliente c:Database.getPersonas()){ //mira si es email de algun  cliente, verifica la contraseña y si esta bien, lo deja entrar y lo guarda como usuario loggeado
                if(c.getEmail().equals(this.email.getText())) {
                    if(c.checkPassword(password.getPassword())){
                        loggedUser.add(c);
                        Database.setCurrentUser(loggedUser);
                        logged = true;
                        Database.save();
                    }else{
                        JOptionPane.showMessageDialog(this, "Contraseña incorrecta", "Error de registro", JOptionPane.WARNING_MESSAGE);
                        password.setText("");
                    }
                }
            }
            if(this.email.getText().equals("admin@javabnb.com")&&Admin.checkPassword(password.getPassword())) {
                Admin admin = new Admin(); //mira si es el admin, con la contraseña correcta y lo guarda como usuario loggeado
                loggedUser.add(admin);
                Database.setCurrentUser(loggedUser);
                logged = true;
                Database.save();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Usuario no encontrado", "Error de registro", JOptionPane.WARNING_MESSAGE);
        }
        if(logged) { //si el email y la contraseña han sido introducido correctamente, se mira que menu hay que abrir, segun el tipo de usuario que acaba de entrar
            if(Database.getCurrentUser().getFirst() instanceof Admin){
                new MenuAdmin();
                this.dispose();
                this.setVisible(false);
            }else if(Database.getCurrentUser().getFirst() instanceof ClienteParticular){
                new Home("particular");
                this.dispose();
                this.setVisible(false);
            }else if(Database.getCurrentUser().getFirst() instanceof Anfitrion){
                new MenuAnfitrion();
                this.dispose();
                this.setVisible(false);
            }
        }*/

        if(!this.email.getText().isBlank() || this.password.getPassword().length != 0) {
            //Caso especial de que se trate del admin
            if(this.email.getText().equalsIgnoreCase("admin@javabnb.com") && Admin.checkPassword(this.password.getPassword())) {
                ArrayList c = new ArrayList();
                c.add(new Admin());
                Database.setCurrentUser(c);
                new MenuAdmin();
                this.dispose();
                return;
            }

            //Si no es admin es cliente
            Cliente clienteTryLogin = null;
            if(Database.getAllEmail().contains(this.email.getText())) {
                for(Cliente c : Database.getPersonas()) {
                    ArrayList userLoginIn = new ArrayList<>();
                    if(c.getEmail().equalsIgnoreCase(this.email.getText()) && c.checkPassword(this.password.getPassword())) {
                        userLoginIn.add(c);
                        Database.setCurrentUser(userLoginIn);
                        break;
                    }
                }
            }else {
                JOptionPane.showMessageDialog(this, "No exsite un usuario con ese correo", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            if(Database.getCurrentUser().getFirst() instanceof ClienteParticular) {
                new Home(Database.getCurrentUser().getFirst().getClass().getSimpleName());
                this.dispose();
            } else if(Database.getCurrentUser().getFirst() instanceof Anfitrion) {
                new MenuAnfitrion();
                this.dispose();
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField email;
    private javax.swing.JPanel formPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel reestablecerLabel;
    private javax.swing.JLabel register;
    // End of variables declaration//GEN-END:variables
}
