/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.rk.javabnb.UI;

import com.rk.javabnb.Inmuebles.Inmueble;
import com.rk.javabnb.Inmuebles.Reserva;
import com.rk.javabnb.Usuarios.Admin;
import com.rk.javabnb.Usuarios.Anfitrion;
import com.rk.javabnb.Usuarios.Cliente;
import com.rk.javabnb.Usuarios.ClienteParticular;
import com.rk.javabnb.db.Database;
import com.rk.javabnb.db.DataChecker;

import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.time.LocalDate;

/**
 *
 * @author admin
 */
public class PreReserva2 extends javax.swing.JFrame {

    /**
     * Creates new form PreReserva2
     */
    public PreReserva2(Inmueble inmueble) {
        initComponents();
        this.setVisible(true);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.inmueble = inmueble;

        tituloLabel.setText(inmueble.getTitulo());
        tipoLabel.setText(inmueble.getTipo());
        direccionLabel.setText(inmueble.getDireccion());
        Anfitrion a = inmueble.getAnfitrion();
        String aLabel = "";
        if(a.isSuper()){
            aLabel = "Superanfitrión: "+a.getNombre();
        }else{
            aLabel = "Anfitrión: "+a.getNombre();
        }
        anfitrionLabel.setText(aLabel);
        datosLabel.setText(inmueble.getDatos().toString());
        jLabel6.setText("Descripción: " + inmueble.getDatos().getDescripcion());
        jLabel7.setText("Precio por noche: "+String.valueOf(inmueble.getPrecio()));
        jLabel8.setText("Precio con descuento (para los clientes VIP): "+String.valueOf(inmueble.getPrecio()*0.9));
        jLabel9.setText("Servicios: "+inmueble.getServicios());
        jLabel10.setText("Número máximo de huéspedes: "+String.valueOf(inmueble.getDatos().getMaxHuespedes()));
        String rating = inmueble.getCalificacion()+"/5";
        ratingLabel.setText(rating);
        try {
            fechaLlegada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        try {
            fechaSalida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        String valorado = "Calificado "+inmueble.getVecesValorado()+" veces";
        vecesVisitadoLabel.setText(valorado);
        //ImageIcon imageIcon = new ImageIcon(getClass().getResource("/"+inmueble.getTitulo()+".png"));
        //String url = System.getProperty("user.dir") + File.separator + "src" + File.separator + "main" + File.separator + "resources" + File.separator + inmueble.getTitulo()+".";
        ImageIcon imageIcon = new ImageIcon(inmueble.getFotoURL());
        Image scaledImage = imageIcon.getImage().getScaledInstance(fotoLabel.getWidth(), fotoLabel.getHeight(), Image.SCALE_SMOOTH);
        this.fotoLabel.setIcon(new javax.swing.ImageIcon(scaledImage));
        //setTexts añaden toda la informacion sobre el inmueble a la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        tituloLabel = new javax.swing.JLabel();
        tipoLabel = new javax.swing.JLabel();
        direccionLabel = new javax.swing.JLabel();
        anfitrionLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        datosLabel = new javax.swing.JLabel();
        serVIPButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ratingLabel = new javax.swing.JLabel();
        fechaLlegada = new javax.swing.JFormattedTextField();
        fechaSalida = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        vecesVisitadoLabel = new javax.swing.JLabel();
        reservarButton = new javax.swing.JButton();
        fotoLabel = new javax.swing.JLabel();
        volverButton = new javax.swing.JButton();
        huespedesSpinner = new javax.swing.JSpinner();

        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formClosing();
            }
        });
        this.getContentPane().setLayout(new java.awt.GridBagLayout());
        this.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/small_logo.png"))); // NOI18N
        getContentPane().add(jLabel1, new java.awt.GridBagConstraints());

        tituloLabel.setText("jLabel2");
        tituloLabel.setFont(new java.awt.Font("Montserrat", 3, 24));
        tituloLabel.setMaximumSize(new java.awt.Dimension(259, 17));
        tituloLabel.setPreferredSize(new java.awt.Dimension(259, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(7, 37, 7, 37);
        getContentPane().add(tituloLabel, gridBagConstraints);

        tipoLabel.setText("jLabel3");
        tipoLabel.setMaximumSize(new java.awt.Dimension(259, 17));
        tipoLabel.setPreferredSize(new java.awt.Dimension(259, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(tipoLabel, gridBagConstraints);

        direccionLabel.setText("jLabel4");
        direccionLabel.setMaximumSize(new java.awt.Dimension(259, 17));
        direccionLabel.setPreferredSize(new java.awt.Dimension(259, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(direccionLabel, gridBagConstraints);

        anfitrionLabel.setText("jLabel5");
        anfitrionLabel.setMaximumSize(new java.awt.Dimension(259, 17));
        anfitrionLabel.setPreferredSize(new java.awt.Dimension(259, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(anfitrionLabel, gridBagConstraints);

        jLabel6.setMaximumSize(new java.awt.Dimension(400, 17));
        jLabel6.setMinimumSize(new java.awt.Dimension(400, 17));
        jLabel6.setPreferredSize(new java.awt.Dimension(400, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 36, 5, 36);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setMaximumSize(new java.awt.Dimension(259, 17));
        jLabel7.setPreferredSize(new java.awt.Dimension(259, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 35, 5, 35);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setMaximumSize(new java.awt.Dimension(400, 17));
        jLabel8.setMinimumSize(new java.awt.Dimension(400, 17));
        jLabel8.setPreferredSize(new java.awt.Dimension(400, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 35, 5, 35);
        getContentPane().add(jLabel8, gridBagConstraints);

        jLabel9.setMaximumSize(new java.awt.Dimension(400, 17));
        jLabel9.setMinimumSize(new java.awt.Dimension(400, 17));
        jLabel9.setPreferredSize(new java.awt.Dimension(400, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 34, 5, 34);
        getContentPane().add(jLabel9, gridBagConstraints);

        jLabel10.setMaximumSize(new java.awt.Dimension(259, 17));
        jLabel10.setPreferredSize(new java.awt.Dimension(259, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(jLabel10, gridBagConstraints);

        datosLabel.setText("jLabel11");
        datosLabel.setMaximumSize(new java.awt.Dimension(500, 17));
        datosLabel.setPreferredSize(new java.awt.Dimension(500, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 37, 5, 30);
        getContentPane().add(datosLabel, gridBagConstraints);

        try {
            ClienteParticular cli = (ClienteParticular) Database.getCurrentUser().getFirst();
            if(!cli.isVIP()) {
                serVIPButton.setText("ser VIP");
                serVIPButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        serVIPButtonActionPerformed(evt);
                    }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 7;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
                getContentPane().add(serVIPButton, gridBagConstraints);
            }

            jLabel12.setText("Fecha de la llegada:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(30, 36, 5, 36);
            getContentPane().add(jLabel12, gridBagConstraints);

            jLabel18.setText("Fecha de la salida:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
            getContentPane().add(jLabel18, gridBagConstraints);

            jLabel19.setText("Huéspedes:");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 11;
            gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
            getContentPane().add(jLabel19, gridBagConstraints);

            ratingLabel.setText("jLabel20");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 7;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            getContentPane().add(ratingLabel, gridBagConstraints);

            fechaLlegada.setText("jFormattedTextField1");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(5, 34, 5, 34);
            getContentPane().add(fechaLlegada, gridBagConstraints);

            fechaSalida.setText("jFormattedTextField2");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            getContentPane().add(fechaSalida, gridBagConstraints);

            reservarButton.setText("Reservar");
            reservarButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    reservarButtonActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 13;
            gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
            getContentPane().add(reservarButton, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 12;
            getContentPane().add(huespedesSpinner, gridBagConstraints);

        }catch(Exception e) {}


        jLabel21.setText("Rating:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 23, 0, 0);
        getContentPane().add(jLabel21, gridBagConstraints);

        vecesVisitadoLabel.setText("Valorado 20 veces");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 24, 0, 0);
        getContentPane().add(vecesVisitadoLabel, gridBagConstraints);



        fotoLabel.setText("");
        fotoLabel.setMaximumSize(new java.awt.Dimension(400, 300));
        fotoLabel.setPreferredSize(new java.awt.Dimension(400, 300));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        getContentPane().add(fotoLabel, gridBagConstraints);

        volverButton.setText("Volver");
        volverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 34, 26, 44);
        getContentPane().add(volverButton, gridBagConstraints);


        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void serVIPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serVIPButtonActionPerformed
        if(Database.getCurrentUser().get(0) instanceof ClienteParticular){
            new VIP();
            this.dispose();
            this.setVisible(false);
        }else{
            JOptionPane.showMessageDialog(this, "Sólo cliente particulares pueden ser VIP","Error",JOptionPane.ERROR_MESSAGE);
        }
        //redirige a la pagina donde el cliente se puede hacer vip
    }//GEN-LAST:event_serVIPButtonActionPerformed

    private void reservarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservarButtonActionPerformed
        if(!(Database.getCurrentUser().get(0) instanceof ClienteParticular)){
            JOptionPane.showMessageDialog(this, "Solamente clientes particualres pueden hacer reservas","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            boolean huespedes = false;
            if(((int) this.huespedesSpinner.getValue() < 1)||((int)this.huespedesSpinner.getValue()> inmueble.getMHuespedes())) {
                JOptionPane.showMessageDialog(this, "El número de huéspedes tiene que ser entre 1 y "+inmueble.getMHuespedes(), "Error", JOptionPane.WARNING_MESSAGE);
            }else{huespedes = true;}

            ClienteParticular reservador = (ClienteParticular) Database.getCurrentUser().get(0);

            boolean tarjeta = false;
            if(reservador.getTarjeta() == null) {
                JOptionPane.showMessageDialog(this, "No tienes configurado ningún método de pago", "Error de pago", JOptionPane.WARNING_MESSAGE);
                Database.setCurrentInmueble(inmueble);
                new DatosBancarios("prereserva");
                this.dispose();
                this.setVisible(false);
            }else{tarjeta = true;}

            String[] fEntrada = new String[3];
            fEntrada = fechaLlegada.getText().split("/");
            String[] fSalida = new String[3];
            fSalida = fechaSalida.getText().split("/");


            if(DataChecker.checkFecha(fEntrada)) {
                LocalDate fEntradaFormat = LocalDate.of(Integer.parseInt(fEntrada[2]), Integer.parseInt(fEntrada[1]), Integer.parseInt(fEntrada[0]));
                if(DataChecker.checkFecha(fSalida)) {
                    LocalDate fSalidaFormat = LocalDate.of(Integer.parseInt(fSalida[2]), Integer.parseInt(fSalida[1]), Integer.parseInt(fSalida[0]));
                    if(inmueble.verDisponibilidad(fEntradaFormat, fSalidaFormat)&&huespedes&&tarjeta){
                        //verifica que no se ha sobrepasado el límite de huéspedes, hacer que funcionen las fechas, que tenga tarjeta etc
                        for(Reserva r:inmueble.getReservas()){
                            System.out.println(r.getSalida());
                        }
                        new Reserva(this.inmueble, Database.getCurrentParticular(), fEntradaFormat, fSalidaFormat, (int) this.huespedesSpinner.getValue());
                        new MenuParticular();
                        this.dispose();
                    }else{
                        JOptionPane.showMessageDialog(this,"Lo sentimos mucho, pero el inmueble no está disponible en las fechas elegidas","No disponible",JOptionPane.WARNING_MESSAGE);
                    }
                }else{JOptionPane.showMessageDialog(this, "Introduzca una fecha de salida válida","Error",JOptionPane.ERROR_MESSAGE);}
            }else{JOptionPane.showMessageDialog(this, "Introduzca una fecha de llagada válida","Error",JOptionPane.ERROR_MESSAGE);}
        }
        //verifica si el usuario loggeado es un cliente particular, que ha elegido fechas buenas, correcto numero de huespedes y se crea la reserva
    }//GEN-LAST:event_reservarButtonActionPerformed

    public void formClosing(){
        this.dispose();
    }
    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverButtonActionPerformed
        this.dispose();
        //vuelve a la pagina de inmuebles de la que habia salido
    }//GEN-LAST:event_volverButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
    /* Set the Nimbus look and feel */

    /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PreReserva2().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel anfitrionLabel;
    private javax.swing.JLabel datosLabel;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JFormattedTextField fechaLlegada;
    private javax.swing.JFormattedTextField fechaSalida;
    private javax.swing.JLabel fotoLabel;
    private javax.swing.JSpinner huespedesSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JButton reservarButton;
    private javax.swing.JButton serVIPButton;
    private javax.swing.JLabel tipoLabel;
    private javax.swing.JLabel tituloLabel;
    private javax.swing.JLabel vecesVisitadoLabel;
    private javax.swing.JButton volverButton;
    // End of variables declaration//GEN-END:variables
    private Inmueble inmueble;
}